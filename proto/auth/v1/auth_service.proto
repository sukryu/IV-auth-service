syntax = "proto3";

package auth.v1;

option go_package = "github.com/sukryu/IV-auth-services/internal/proto/auth/v1;authv1";

import "google/protobuf/timestamp.proto";

// AuthService는 인증 관련 기능을 제공하는 gRPC 서비스입니다.
// 로그인, 토큰 검증, 갱신, 블랙리스트 관리 등을 처리합니다.
service AuthService {
  // Login은 사용자 자격 증명을 검증하고 토큰 쌍을 발행합니다.
  rpc Login(LoginRequest) returns (LoginResponse) {}

  // ValidateToken은 액세스 토큰의 유효성을 검증합니다.
  rpc ValidateToken(ValidateTokenRequest) returns (ValidateTokenResponse) {}

  // RefreshToken은 리프레시 토큰으로 새 토큰 쌍을 발행합니다.
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse) {}

  // BlacklistToken은 토큰을 무효화하여 블랙리스트에 추가합니다.
  rpc BlacklistToken(BlacklistTokenRequest) returns (BlacklistTokenResponse) {}
}

// LoginRequest는 로그인 요청 메시지입니다.
message LoginRequest {
  string username = 1; // 사용자명 (필수)
  string password = 2; // 비밀번호 (필수)
}

// LoginResponse는 로그인 응답 메시지입니다.
message LoginResponse {
  string access_token = 1;           // 발행된 액세스 토큰
  string refresh_token = 2;          // 발행된 리프레시 토큰
  google.protobuf.Timestamp expires_at = 3; // 액세스 토큰 만료 시각
}

// ValidateTokenRequest는 토큰 검증 요청 메시지입니다.
message ValidateTokenRequest {
  string access_token = 1; // 검증할 액세스 토큰 (필수)
}

// ValidateTokenResponse는 토큰 검증 응답 메시지입니다.
message ValidateTokenResponse {
  bool valid = 1;     // 토큰 유효 여부
  string user_id = 2; // 토큰에 포함된 사용자 ID
  repeated string roles = 3; // 사용자 역할 목록
}

// RefreshTokenRequest는 토큰 갱신 요청 메시지입니다.
message RefreshTokenRequest {
  string refresh_token = 1; // 갱신에 사용할 리프레시 토큰 (필수)
}

// RefreshTokenResponse는 토큰 갱신 응답 메시지입니다.
message RefreshTokenResponse {
  string access_token = 1;           // 새로 발행된 액세스 토큰
  string refresh_token = 2;          // 새로 발행된 리프레시 토큰
  google.protobuf.Timestamp expires_at = 3; // 액세스 토큰 만료 시각
}

// BlacklistTokenRequest는 토큰 블랙리스트 추가 요청 메시지입니다.
message BlacklistTokenRequest {
  string token = 1;  // 블랙리스트에 추가할 토큰 (필수)
  string user_id = 2; // 토큰 소유자의 사용자 ID (필수)
  string reason = 3;  // 블랙리스트 사유 (예: "logout")
}

// BlacklistTokenResponse는 토큰 블랙리스트 추가 응답 메시지입니다.
message BlacklistTokenResponse {
  bool success = 1; // 블랙리스트 추가 성공 여부
}